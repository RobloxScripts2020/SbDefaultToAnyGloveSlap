local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Orion_Library_PE_V2.lua"))()

local Window = OrionLib:MakeWindow({
    Name = "Axdle Hub",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "AxdleHubTest"
})

-- Tabs
local MiscTab = Window:MakeTab({Name = "Misc", Icon = "rbxassetid://4483345998", PremiumOnly = false})
local AntiTab = Window:MakeTab({Name = "Anti", Icon = "rbxassetid://4483345998", PremiumOnly = false})
local BadgesTab = Window:MakeTab({Name = "Badges", Icon = "rbxassetid://4483345998", PremiumOnly = false})

-- MiscTab Contents
MiscTab:AddLabel("Made by LunarifyDevelopers")

local playerCountLabel = MiscTab:AddLabel("Players: 0")
local chatMessageLabel = MiscTab:AddLabel("Chat Messages: 0")
local chatCount = 0

-- Update server info
task.spawn(function()
    while task.wait(1) do
        playerCountLabel:Set("Players: " .. #game.Players:GetPlayers())
        chatMessageLabel:Set("Chat Messages: " .. chatCount)
    end
end)

-- Listen to new chat system
local TextChatService = game:GetService("TextChatService")
TextChatService.OnIncomingMessage = function(message)
    if message.TextSource then
        chatCount += 1
    end
end

-- Ensure _G.AntiRecordEnabled is initialized properly
if not _G.AntiRecordEnabled then
    _G.AntiRecordEnabled = false
end

-- AntiTab: Anti-Record Chat Detection
AntiTab:AddButton({
    Name = "Enable Anti-Record",
    Callback = function()
        local TextChatService = game:GetService("TextChatService")
        local keywords = {
            "exploiter", "hacker", "scammer", "cheater", "scripter",
            "exploiting", "hacking", "scamming", "cheating", "script"
        }

        -- Listen for new incoming chat messages
        TextChatService.OnIncomingMessage = function(msg)
            local text = string.lower(msg.Text)
            -- Check if the message contains any of the restricted keywords
            for _, keyword in ipairs(keywords) do
                if string.find(text, keyword) then
                    -- Optionally block the message
                    msg:Destroy()

                    -- Optionally notify the local player or make other actions
                    OrionLib:MakeNotification({
                        Name = "Axdle Hub",
                        Content = "A forbidden word was detected in chat!",
                        Image = "rbxassetid://4483345998",
                        Time = 5
                    })

                    -- Optionally you can kick the player who sent the message (if not the local player)
                    if msg.TextSource and msg.TextSource ~= game.Players.LocalPlayer then
                        local user = game:GetService("Players"):GetPlayerByUserId(msg.TextSource.UserId)
                        if user then
                            user:Kick("Your message contained forbidden words.")
                        end
                    end
                    break
                end
            end
        end

        -- Notify that Anti-Record has been enabled
        OrionLib:MakeNotification({
            Name = "Axdle Hub",
            Content = "Anti-Record enabled.",
            Image = "rbxassetid://4483345998",
            Time = 5
        })

        -- Check if auto-execute is enabled
        if _G.AntiRecordEnabled then
            -- Auto-execute the Anti-Record functionality if _G.AntiRecordEnabled is true
            loadstring(game:HttpGet("https://raw.githubusercontent.com/RobloxScripts2020/SbDefaultToAnyGloveSlap/refs/heads/main/lunarganghub"))()
        end
    end
})

-- TextLabel to show status of Auto-Execute setting
local statusLabel = AntiTab:AddLabel("Auto-Execute: Disabled")

-- Toggle to auto-execute Anti-Record feature via _G.AntiRecordEnabled
AntiTab:AddButton({
    Name = "Toggle Auto-Execute Anti-Record",
    Callback = function()
        -- Player can toggle _G.AntiRecordEnabled between true/false
        if _G.AntiRecordEnabled then
            _G.AntiRecordEnabled = false
            statusLabel:Set("Auto-Execute: Disabled")
            OrionLib:MakeNotification({
                Name = "Axdle Hub",
                Content = "Auto-Execute for Anti-Record disabled.",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        else
            _G.AntiRecordEnabled = true
            statusLabel:Set("Auto-Execute: Enabled")
            OrionLib:MakeNotification({
                Name = "Axdle Hub",
                Content = "Auto-Execute for Anti-Record enabled.",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end
    end
})

-- BadgesTab: Buttons
BadgesTab:AddButton({
    Name = "Free IceSkate (lol)",
    Callback = function()
        game:GetService("ReplicatedStorage").IceSkate:FireServer("Freeze")
    end
})

BadgesTab:AddButton({
    Name = "Instant Lamp",
    Callback = function()
        local glove = game.Players.LocalPlayer:FindFirstChild("leaderstats") and game.Players.LocalPlayer.leaderstats:FindFirstChild("Glove")
        if glove and glove.Value == "ZZZZZZZ" then
            repeat
                task.wait()
                game:GetService("ReplicatedStorage").nightmare:FireServer("LightBroken")
            until game:GetService("BadgeService"):UserHasBadgeAsync(game.Players.LocalPlayer.UserId, 490455814138437)
        else
            OrionLib:MakeNotification({
                Name = "Axdle Hub",
                Content = "You must own ZZZZZZZ or have it equipped.",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end
    end
})

BadgesTab:AddButton({
    Name = "Free Hybrid",
    Callback = function()
        game:GetService("ReplicatedStorage").GRRRRR:FireServer(true)
    end
})

BadgesTab:AddButton({
    Name = "Free Frostbite",
    Callback = function()
        local queue = queueonteleport or queue_on_teleport
        if queue then
            queue([[if not game:IsLoaded() then game.Loaded:Wait() end
            if game.PlaceId == 17290438723 then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-555, 180, 55)
                wait(1)
                for i, v in ipairs(workspace:GetDescendants()) do
                    if v.ClassName == "ProximityPrompt" then
                        v.HoldDuration = 0
                        v.RequiresLineOfSight = false
                        v.MaxActivationDistance = math.huge
                        v.Enabled = true
                        fireproximityprompt(v)
                    end
                end
            end]])
            while task.wait() do
                game:GetService("TeleportService"):Teleport(17290438723)
            end
        end
    end
})

BadgesTab:AddButton({
    Name = "Free Bind",
    Callback = function()
        local queue = queueonteleport or queue_on_teleport
        if queue then
            queue([[if not game:IsLoaded() then game.Loaded:Wait() end
            _G.Script = 'print("teleported!")'
            if game.PlaceId == 74169485398268 then
                local time = tick()
                while tick() - time < 10 do 
                    task.wait() 
                    fireclickdetector(workspace.Orb.ClickDetector) 
                end
                queue_on_teleport(_G.Script)
                while task.wait() do 
                    game:GetService("TeleportService"):Teleport(6403373529) 
                end
            elseif game.PlaceId == 11520107397 or game.PlaceId == 9015014224 or game.PlaceId == 6403373529 or game.PlaceId == 124596094333302 then
                queue_on_teleport(_G.Script)
                while task.wait() do 
                    game:GetService("TeleportService"):Teleport(74169485398268) 
                end
            end]])
        else
            OrionLib:MakeNotification({
                Name = "Axdle Hub",
                Content = "Executor does not support teleport queuing.",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end
    end
})
